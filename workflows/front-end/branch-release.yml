name: Reusable Branch Release

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node.js version'
        required: false
        type: string
        default: '20'
      install-command:
        description: 'Package installation command'
        required: false
        type: string
        default: 'yarn install --immutable'
      actions-repo:
        description: 'Repository containing reusable actions'
        required: false
        type: string
        default: 'SKILL-FAMILIAR-PJ/devops-template'
      actions-ref:
        description: 'Ref of actions repository'
        required: false
        type: string
        default: 'main'
      skip-sonarqube:
        description: 'Skip SonarQube analysis'
        required: false
        type: boolean
        default: false
    secrets:
      SONAR_TOKEN:
        required: false
      SONAR_HOST_URL:
        required: false
      CI_WORKER_REPOSITORY_TOKEN:
        required: true

permissions:
  contents: write
  pull-requests: write
  packages: write
  issues: write

jobs:
  sonarqube-analysis:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: inputs.skip-sonarqube == false

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.CI_WORKER_REPOSITORY_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js Environment
        uses: ${{ inputs.actions-repo }}/setup-node@${{ inputs.actions-ref }}
        with:
          node-version: ${{ inputs.node-version }}

      - name: SonarQube Analysis
        uses: ${{ inputs.actions-repo }}/sonarqube-analysis@${{ inputs.actions-ref }}
        with:
          sonar-token: ${{ secrets.SONAR_TOKEN }}
          sonar-host-url: ${{ secrets.SONAR_HOST_URL }}
          wait-for-quality-gate: 'false'

  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [sonarqube-analysis]
    if: always() && (needs.sonarqube-analysis.result == 'success' || needs.sonarqube-analysis.result == 'skipped')

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.CI_WORKER_REPOSITORY_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js Environment
        uses: ${{ inputs.actions-repo }}/setup-node@${{ inputs.actions-ref }}
        with:
          node-version: ${{ inputs.node-version }}
          install-command: ${{ inputs.install-command }}

      - name: Semantic Release
        uses: ${{ inputs.actions-repo }}/semantic-release@${{ inputs.actions-ref }}
        with:
          github-token: ${{ secrets.CI_WORKER_REPOSITORY_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.CI_WORKER_REPOSITORY_TOKEN }}

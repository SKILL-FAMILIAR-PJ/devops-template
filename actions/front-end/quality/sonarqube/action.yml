name: "SonarQube Analysis"
description: "Run SonarQube analysis with quality gate check"

inputs:
  sonar-token:
    description: "SonarQube authentication token"
    required: true
  sonar-host-url:
    description: "SonarQube server URL"
    required: true
  wait-for-quality-gate:
    description: "Whether to wait for quality gate results"
    required: false
    default: "false"
  quality-gate-timeout:
    description: "Quality gate timeout in minutes"
    required: false
    default: "5"

runs:
  using: "composite"
  steps:
    - name: Cache Sonar analyzers
      uses: actions/cache@v4
      with:
        path: $HOME/.sonar/cache
        key: sonar-analyzers-${{ runner.os }}-${{ inputs.sonar-host-url }}-${{ hashFiles('**/sonar-project.properties') }}
        restore-keys: |
          sonar-analyzers-${{ runner.os }}-${{ inputs.sonar-host-url }}-
          sonar-analyzers-${{ runner.os }}-

    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v6.0.0
      env:
        SONAR_TOKEN: ${{ inputs.sonar-token }}
        SONAR_HOST_URL: ${{ inputs.sonar-host-url }}
        SONAR_USER_HOME: $HOME/.sonar
      with:
        args: >
          -Dsonar.qualitygate.wait=${{ inputs.wait-for-quality-gate }}
          -Dsonar.projectName=${{ github.repository }}

    - name: SonarQube Quality Gate
      if: inputs.wait-for-quality-gate == 'false'
      uses: SonarSource/sonarqube-quality-gate-action@v1.2.0
      env:
        SONAR_TOKEN: ${{ inputs.sonar-token }}
        SONAR_HOST_URL: ${{ inputs.sonar-host-url }}

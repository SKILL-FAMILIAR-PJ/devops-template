name: "Deploy to S3"
description: "Deploy artifacts to S3 with tag and environment folders (environment auto-detected from tag)"

inputs:
  artifact-name:
    description: "Name of the artifact to download"
    required: true
  aws-access-key-id:
    description: "AWS Access Key ID"
    required: true
  aws-secret-access-key:
    description: "AWS Secret Access Key"
    required: true
  aws-region:
    description: "AWS Region"
    required: true
  s3-bucket:
    description: "S3 Bucket name"
    required: true
  s3-folder:
    description: "S3 base folder path"
    required: true
  source-path:
    description: "Local path to sync"
    required: false
    default: "./storybook"

runs:
  using: "composite"
  steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v5
      with:
        name: ${{ inputs.artifact-name }}
        path: ${{ inputs.source-path }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: Deploy to S3
      shell: bash
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}

        # Extract environment from tag (e.g., v1.0.0-DEV.1 -> DEV, v1.0.0-QA.M1 -> QA)
        if [[ $TAG_NAME =~ -([A-Z]+)\. ]]; then
          ENVIRONMENT="${BASH_REMATCH[1]}"
          echo "Extracted environment: $ENVIRONMENT"
        else
          ENVIRONMENT="PROD"
          echo "No environment suffix found, defaulting to: $ENVIRONMENT"
        fi

        # Function to sync with appropriate cache headers
        sync_to_s3() {
          local dest=$1
          echo "Deploying to: $dest"
          
          # Sync HTML files with no-cache
          aws s3 sync ${{ inputs.source-path }} "$dest" \
            --exclude "*" --include "*.html" \
            --cache-control "no-cache, no-store, must-revalidate" \
            --delete
          
          # Sync JS/CSS with hash in filename (long cache)
          aws s3 sync ${{ inputs.source-path }} "$dest" \
            --exclude "*" --include "*.js" --include "*.css" \
            --cache-control "public, max-age=31536000, immutable" \
            --delete
          
          # Sync other files (images, fonts, etc.) with moderate cache
          aws s3 sync ${{ inputs.source-path }} "$dest" \
            --exclude "*.html" --exclude "*.js" --exclude "*.css" \
            --cache-control "public, max-age=86400" \
            --delete
          
          echo "Deployment complete: $dest"
        }

        # Deploy to tag-specific folder
        sync_to_s3 "s3://${{ inputs.s3-bucket }}/${{ inputs.s3-folder }}/$TAG_NAME/"

        # Deploy to environment folder
        sync_to_s3 "s3://${{ inputs.s3-bucket }}/${{ inputs.s3-folder }}/$ENVIRONMENT/"
